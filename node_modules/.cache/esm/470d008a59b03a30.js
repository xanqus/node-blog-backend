let Koa,Router,bodyParser,mongoose,api,jwtMiddleware,createFakeData;_59b‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_59b‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_59b‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_59b‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_59b‍.w("./api",[["default",["api"],function(v){api=v}]]);_59b‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);_59b‍.w("./createFakeData",[["default",["createFakeData"],function(v){createFakeData=v}]]);require('dotenv').config();









const { PORT, MONGO_URI } = process.env;

mongoose
  .connect(MONGO_URI, {
    useNewUrlParser: true,
    useFindAndModify: false,
    useUnifiedTopology: true,
  })
  .then(() => {
    console.log('Connected to MongoDB');
    createFakeData();
  })
  .catch((e) => {
    _59b‍.g.console.error(e);
  });

const app = new Koa();
const router = new Router();

router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);

app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(4000, () => {
  _59b‍.g.console.log('Listening to port %d', port);
});
